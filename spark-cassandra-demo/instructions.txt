Start Cassandra Clsuter / Standalone Node


CREATE KEYSPACE capstone WITH replication = {'class': 'SimpleStrategy','replication_factor': 1}


CREATE TABLE carddetails (
	cardId bigint,
	customerId bigint,
	bank text,
	type text,
	nameOnCard text,
	expiryMonth int,
	expiryYear int,
	cardNum text,
	cardLimit float,
	PRIMARY KEY ((cardId),bank));
	

CREATE TABLE customer (
	customerid bigint PRIMARY KEY,
	name text,
	mobilenumber text,
	gender text,
	birthdate bigint,
	email text,
	address text,
	state text,
	country text,
	pincode text );
	
	

CREATE TABLE merchant (
	merchantid bigint PRIMARY KEY,
	merchantname text,
	mobilenumber text,
	startdate bigint,
	email text,
	address text,
	state text,
	country text,
	pincode text,
	merchanttype int,
	segment text,
	taxRegNum text,
	description text
	 );


CREATE TABLE capstone.transaction (
    transactionid bigint PRIMARY KEY,
    customerid bigint,
    invoiceamount float,
    invoicenumber text,
    merchantid bigint,
    status text,
    timestamp bigint,
    segment text
);


CREATE TABLE customer_transaction (
    customerid bigint PRIMARY KEY,
    ordersuccesscounter counter,
    ordercancelcounter counter,
    orderbelow500 counter,
    orderbelow1000 counter,
    orderbelow2000 counter,
    orderabove2000 counter
);

CREATE TABLE merchant_transaction (
    merchantid bigint PRIMARY KEY,
    ordersuccesscounter counter,
    ordercancelcounter counter,
    orderbelow500 counter,
    orderbelow1000 counter,
    orderbelow2000 counter,
    orderabove2000 counter
);

CREATE TABLE daily_transaction (
    date text PRIMARY KEY,
    ordersuccesscounter counter,
    ordercancelcounter counter,
    orderbelow500 counter,
    orderbelow1000 counter,
    orderbelow2000 counter,
    orderabove2000 counter
);

CREATE MATERIALIZED VIEW bank_by_customer AS  SELECT customerId,bank FROM carddetails WHERE customerId is not null and bank is not null PRIMARY KEY ((customerId),bank,cardId);



CREATE TABLE bank_merchant_transaction (
	year int,
	month int,
    bank text,
    merchantid bigint,
    totalamount float,
    ordercount int,
    segment text,
    PRIMARY KEY ((year,month),bank,merchantid,segment)
);


CREATE TABLE merchant_gender_transaction (
	year int,
	month int,
    merchantid bigint,
    gender text,
    amount float,
    PRIMARY KEY ((year,month),merchantid,gender)
);


//Not in use
CREATE TABLE bank_total_transaction (
    date text,
    bank text,
    totalAmount float,
    PRIMARY KEY ((date,bank),totalAmount)
);

cd /tmp/capstone/capstone

mvn clean package

cd /usr/local/spark/bin


/usr/local/spark/bin/spark-submit --class com.edureka.capstone.jobs.BankMerchantAggregationJob /tmp/capstone/capstone/spark-cassandra-demo/target/spark-cassandra-demo-0.0.1-SNAPSHOT-jar-with-dependencies.jar

/usr/local/spark/bin/spark-submit --class com.edureka.capstone.jobs.SparkStreamingCardJob /tmp/capstone/capstone/spark-cassandra-demo/target/spark-cassandra-demo-0.0.1-SNAPSHOT-jar-with-dependencies.jar

/usr/local/spark/bin/spark-submit --class com.edureka.capstone.jobs.SparkStreamingCustomerJob /tmp/capstone/capstone/spark-cassandra-demo/target/spark-cassandra-demo-0.0.1-SNAPSHOT-jar-with-dependencies.jar

/usr/local/spark/bin/spark-submit --class com.edureka.capstone.jobs.SparkStreamingMerchantJob /tmp/capstone/capstone/spark-cassandra-demo/target/spark-cassandra-demo-0.0.1-SNAPSHOT-jar-with-dependencies.jar

/usr/local/spark/bin/spark-submit --class com.edureka.capstone.jobs.SparkStreamingTransactionJob /tmp/capstone/capstone/spark-cassandra-demo/target/spark-cassandra-demo-0.0.1-SNAPSHOT-jar-with-dependencies.jar


bin/kafka-console-consumer.sh --zookeeper 20.0.32.147:2181 --topic merchant_topic --from-beginning

//http://msvaljek.blogspot.in/2015/12/stream-processing-with-spring-kafka_13.html

https://archive.apache.org/dist/spark/spark-2.1.0/spark-2.1.0-bin-hadoop2.7.tgz

https://archive.apache.org/dist/kafka/0.8.2.1/kafka_2.11-0.8.2.1.tgz

spark-submit  --class com.edureka.capstone.jobs.SparkStreamingMerchantJob /Users/raghugupta/Documents/gitrepo/capstone/spark-cassandra-demo/target/spark-cassandra-demo-0.0.1-SNAPSHOT-jar-with-dependencies.jar

spark-submit  --class com.edureka.capstone.jobs.SparkStreamingCustomerJob /Users/raghugupta/Documents/gitrepo/capstone/spark-cassandra-demo/target/spark-cassandra-demo-0.0.1-SNAPSHOT-jar-with-dependencies.jar 